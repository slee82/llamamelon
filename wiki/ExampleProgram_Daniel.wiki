#summary Daniel’s Example program.
#labels Phase-Design

=I’m working on this.=

=The program:=

{{{
/* Got the calculations from : http://sbs-baseball.com/theory.txt
  Check out http://en.wikipedia.org/wiki/Baseball_statistics*/

/*****************************************************/
/***STATS DEFINITION***/

/*Batter probabilities*/
stat bWalk = BB / PA;
stat bSingle = (Hits - (2B + 3B + HR))/ PA;
stat bDouble = 2B / PA;
stat bTriple = 3B / PA;
stat bHR = HR / PA;

/*Pitcher probabilities*/
stat pWalk = BB / BF;
stat pSingle = (Hits / BF) - pHR - pTriple - pDouble;
stat pDouble = Hits x .174 / BF;
stat pTriple = Hits x .024 / BF;
stat pHR = HR / BF;

/***END STATS DEFINITION***/
/*****************************************************/

/*Global variables that hold combined probabilities given a pitcher and a batter*/
number probWalk = 0;
number probSingle = 0;
number probDouble = 0;
number probTriple = 0;
number probHR = 0;


/*Basic Simulation function: simplifies the problem by pretending that
this is a game between the batter and the pitcher. To further simplify
the problem: let’s assume that a home run is worth 1 point to the batting 
team, singles and walks are worth 1/4 of a point, doubles are 1/2 a point
and triples are 3/4 of a point.*/
simfunction basicSimulation is:

  number team1Score = 0;
  number team2Score = 0;

  /*Note: team1 and team2 are global variables that represent the teams that the
  sim function is currently working with. The sim function sets them automatically.*/

  /*team1 is batting its best batters, while team2 pitches with best pitchers*/
  for i from 1 to 5 step 1 do:

    player batter = any from team1 where (type is "batter" and AVG is top 5);
    player pitcher = any from team2 where (type is "pitcher" and ERA is lowest 5);
    /*I am introducing new conditional shortcuts 'top' and 'lowest' because doing 'AVG > 3.0' might
    not work for a team with bad players (would return no players). I think these keywords come
    in handy for selecting best players, which is something you do a lot when simulating baseball.*/

  end;

end;


/*Declaring a general-purpose function that calculates
combined probabilities given a pitcher and a batter.
It takes the max of both: average is not a good estimate.*/
function combineProb (player batter, player pitcher) is:

  /*Having Min and Max functions can be useful in situations like these*/
  probWalk = max(pitcher’s pWalk, batter’s bWalk);
  probSingle = max(pitcher’s pSingle, batter’s bSingle);
  probDouble = max(pitcher’s pDouble, batter’s bDouble);
  probTriple = max(pitcher’s pTriple, batter’s bTriple);
  probHR = max(pitcher’s pHR, batter’s bHR);

end;

/*This makes simFunc the active simulation function, for use in the
  following nested simulations (so we don’t have to pass it multiple times).*/
activate basicSimulation;

sim((Astros, Dodgers, 3), (Orioles, Twins, 3), 3);
}}}

=Further explanations:=